class Solution {
    int count(int[] arr, int n, int x) {
        // code here
        int leftIndex = findLeftIndex(arr, x);
        int rightIndex = findRightIndex(arr, x);
        
        if (leftIndex == -1 || rightIndex == -1) {
            return 0;
        }
        
        return rightIndex - leftIndex + 1;
    }
    public static int findLeftIndex(int[] arr, int x) {
        int low = 0;
        int high = arr.length - 1;
        int result = -1;
        
        while (low <= high) {
            int mid = low + (high - low) / 2;
            
            if (arr[mid] == x) {
                result = mid;
                high = mid - 1;
            } else if (arr[mid] < x) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        
        return result;
    }
    
    public static int findRightIndex(int[] arr, int x) {
        int low = 0;
        int high = arr.length - 1;
        int result = -1;
        
        while (low <= high) {
            int mid = low + (high - low) / 2;
            
            if (arr[mid] == x) {
                result = mid;
                low = mid + 1;
            } else if (arr[mid] < x) {
                low = mid + 1;
            } else {
                high = mid - 1;
            }
        }
        
        return result;
    }
}
